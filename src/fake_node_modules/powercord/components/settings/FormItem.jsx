const { getModule, getModuleByDisplayName, React } = require('powercord/webpack');
const AsyncComponent = require('../AsyncComponent');

const DFormItem = AsyncComponent.from(getModuleByDisplayName('FormItem'));
const FormText = AsyncComponent.from(getModuleByDisplayName('FormText'));

let classes = {
  initialized: false,
  flexClassName: '',
  classModule: {},
  classDivider: '',
  classDividerDef: '',
  formModule: {}
};

module.exports = class FormItem extends React.Component {
  constructor () {
    super();

    this.state = { classes };
  }

  async componentDidMount () {
    if (classes.initialized) {
      return;
    }

    const Flex = await getModuleByDisplayName('Flex');
    classes = {
      initialized: true,

      flexClassName: `${Flex.Direction.VERTICAL} ${Flex.Justify.START} ${Flex.Align.STRETCH} ${Flex.Wrap.NO_WRAP}`,
      classModule: await getModule([ 'marginTop20' ]),
      classDivider: (await getModule(m => Object.keys(m).join('') === 'divider')).divider,
      classDividerDef: (await getModule([ 'dividerDefault' ])).dividerDefault,
      formModule: await getModule([ 'formText', 'description' ])
    };

    this.setState({ classes });
  }

  render () {
    return (
      <DFormItem
        title={this.props.title}
        required={this.props.required}
        className={`${classes.flexClassName} ${classes.classModule.marginBottom20}`}
      >
        {this.props.children}

        <FormText className={classes.formModule.description}>
          {this.props.note}
        </FormText>

        <div className={`${classes.classDivider} ${classes.classDividerDef}`} />
      </DFormItem>
    );
  }
};
